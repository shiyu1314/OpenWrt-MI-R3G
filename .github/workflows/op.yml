name: openwrt

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:      
      OP_IP:
        description: '静态IP地址'     
        required: false
        default: '192.168.2.1' 
        type: string
   
      OP_author:
        description: '定制作者'
        required: false
        default: 'shiyu1314' 
        type: string 
        
      name:
        description: '主机名称'
        required: true
        default: 'MI-R3G'
        type: choice
        options:
        - MI-R3G
        - OpenWrt 
        

      CUSTOM_PLUGINS:
        description: '自定义插件名称，用空格分隔'
        required: false
        default: 'luci-theme-argon luci-app-argon-config luci-app-ttyd'
        type: string

env:
  DIY_P1_SH: sh/op.sh

jobs:
  build_firmware:
    name: 编译固件
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        repo_info:
          - {repo_url: "https://github.com/openwrt/openwrt", branch: "openwrt-23.05"}


    steps: 
    - name: 检查分支
      uses: actions/checkout@main

    - name: 编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update
        sudo apt-get install -y img2simg build-essential flex bison cmake g++ gawk gcc-multilib g++-multilib gettext git libfuse-dev libncurses5-dev libssl-dev python3 python3-pip python3-ply python3-distutils python3-pyelftools rsync unzip zlib1g-dev file wget subversion patch upx-ucl autoconf automake curl asciidoc binutils bzip2 lib32gcc-s1 libc6-dev-i386 uglifyjs msmtp texinfo libreadline-dev libglib2.0-dev xmlto libelf-dev libtool autopoint antlr3 gperf ccache swig coreutils haveged scons libpython3-dev rename qemu-utils
        sudo apt-get clean
        git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'
        sudo timedatectl set-timezone 'Asia/Shanghai'
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        df -Th

    - name: 设置环境变量
      run: |
        TAG="$(date +'%Y%m%d')-$(openssl rand -hex 3)"
        echo "tag=$TAG" >> $GITHUB_ENV
        echo "REPO_URL=${{ matrix.repo_info.repo_url }}" >> $GITHUB_ENV
        echo "REPO_BRANCH=${{ matrix.repo_info.branch }}" >> $GITHUB_ENV
        echo "OP_IP=${{ github.event.inputs.OP_IP }}" >> $GITHUB_ENV
        echo "OP_author=${{ github.event.inputs.OP_author }}" >> $GITHUB_ENV
        echo "name=${{ github.event.inputs.name }}" >> $GITHUB_ENV
        echo "CUSTOM_PLUGINS=${{ github.event.inputs.CUSTOM_PLUGINS }}" >> $GITHUB_ENV

    - name: 克隆源代码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt 
        
    - name: 添加6.6内核
      run: |
        curl -s https://raw.githubusercontent.com/openwrt/openwrt/openwrt-24.10/include/kernel-6.6 > openwrt/include/kernel-6.6
        rm -rf openwrt/target/linux/generic
        [ -e generic ] && cp -rf generic openwrt/target/linux
        rm -rf openwrt/package/kernel/linux/modules/[a-z]*.mk
        [ -e patch ] && cp -rf patch/modules/*.mk openwrt/package/kernel/linux/modules
        cd openwrt
        ./scripts/feeds update -a
        cd ..
        [ -e generic ] && cp -rf generic openwrt/target/linux
        [ -e patch ] && cp -rf patch/luci/*.patch openwrt/feeds/luci
        [ -e patch ] && cp -rf patch/nginx/nginx-util/*.patch openwrt/feeds/packages   
        [ -e patch ] && cp -rf patch/firewall4/0004-luci-add-firewall-add-custom-nft-rule-support.patch openwrt/feeds/luci
        [ -e patch ] && cp -rf patch/firewall4/100-openwrt-firewall4-add-custom-nft-command-support.patch openwrt
        [ -e patch ] && cp -rf patch/generic/0014-kernel-enable-Multi-Path-TCP-for-SMALL_FLASH-targets.patch openwrt
        [ -e patch ] && cp -rf patch/openssl/quic/*.patch openwrt/package/libs/openssl/patches
        [ -e patch ] && cp -rf patch/nginx/luci.locations openwrt/feeds/packages/net/nginx/files-luci-support
        [ -e patch ] && cp -rf patch/nginx/uci.conf.template openwrt/feeds/packages/net/nginx-util/files
        [ -e patch ] && cp -rf patch/fix-linux-6.6.patch openwrt
        ls openwrt/target/linux/generic
        
    - name: 加载自定义脚本
      run: |
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH
  

    - name: 加载自定义配置
      run: |
        [ -e files ] && mv files openwrt/files
        cat <<EOF >>openwrt/.config
        CONFIG_TARGET_ramips=y
        CONFIG_TARGET_ramips_mt7621=y
        CONFIG_TARGET_ramips_mt7621_DEVICE_xiaomi_mi-router-3g=y
        CONFIG_PACKAGE_dnsmasq-full=y
        CONFIG_PACKAGE_dnsmasq_full_ipset=y
        # CONFIG_PACKAGE_dnsmasq_full_broken_rtc is not set
        # CONFIG_PACKAGE_dnsmasq is not set
        CONFIG_PACKAGE_luci-app-firewall=y
        CONFIG_PACKAGE_luci-base=y
        CONFIG_PACKAGE_ethtool=y
        CONFIG_PACKAGE_ariang-nginx=y
        CONFIG_PACKAGE_libopenssl-conf=y
        CONFIG_PACKAGE_libopenssl-legacy=y
        CONFIG_PACKAGE_kmod-usb-net-rndis=y
        CONFIG_PACKAGE_kmod-usb-net=y
        CONFIG_PACKAGE_kmod-usb-net-cdc-ether=y
        CONFIG_PACKAGE_luci-nginx=y
        CONFIG_PACKAGE_nginx-all-module=y
        CONFIG_PACKAGE_nginx-ssl=y
        CONFIG_PACKAGE_nginx-mod-brotli=y
        CONFIG_PACKAGE_nginx-mod-luci=y
        CONFIG_PACKAGE_nginx-mod-rtmp=y
        CONFIG_PACKAGE_nginx-mod-stream=y
        CONFIG_PACKAGE_nginx-mod-ubus=y
        CONFIG_PACKAGE_nginx-mod-zstd=y
        CONFIG_PACKAGE_nginx-ssl-util=y
        CONFIG_NGINX_DAV=y
        CONFIG_NGINX_HTTP_AUTH_BASIC=y
        CONFIG_NGINX_HTTP_QUIC=y
        CONFIG_NGINX_HTTP_REAL_IP=y
        CONFIG_NGINX_HTTP_SUB=y
        CONFIG_NGINX_STREAM_REAL_IP=y
        CONFIG_OPENSSL_ENGINE=y
        CONFIG_OPENSSL_OPTIMIZE_SPEED=y
        CONFIG_OPENSSL_WITH_ASM=y
        CONFIG_PACKAGE_libopenssl-afalg=y
        CONFIG_PACKAGE_libopenssl-conf=y
        CONFIG_PACKAGE_libopenssl-devcrypto=y
        CONFIG_PACKAGE_libopenssl-legacy=y
        CONFIG_PACKAGE_openssl-util=y
        # CONFIG_PACKAGE_libopenssl-padlock is not set
        # CONFIG_OPENSSL_WITH_ERROR_MESSAGES is not set
        CONFIG_PACKAGE_curl=y
        CONFIG_PACKAGE_libcurl=y
        CONFIG_LIBCURL_NGHTTP3=y
        CONFIG_LIBCURL_NGTCP2=y
        CONFIG_LIBCURL_OPENSSL=y
        # CONFIG_LIBCURL_GNUTLS is not set
        # CONFIG_LIBCURL_MBEDTLS is not set
        # CONFIG_LIBCURL_NOSSL is not set
        # CONFIG_LIBCURL_WOLFSSL is not set
        CONFIG_PACKAGE_kmod-tcp-bbr3=y
        CONFIG_PACKAGE_kmod-tcp-brutal=y
        CONFIG_PACKAGE_my-default-settings=y
        EOF
        

        IFS=' ' read -r -a plugins <<< "${{ github.event.inputs.CUSTOM_PLUGINS }}"
        for plugin in "${plugins[@]}"; do
          echo "CONFIG_PACKAGE_${plugin}=y" >> openwrt/.config
        done    
    
    - name: 下载编译依赖
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    
    - name: 编译源码
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: 查看磁盘使用情况
      if: (!cancelled())
      run: df -hT

    - name: 整理文件
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        rm -rf *.buildinfo
        rm -rf profiles.json
        rm -rf *.manifest
        rm -rf *.sha
        rm -rf sha256sums
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV

    - name: 上传固件到Releases
      uses: softprops/action-gh-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ matrix.repo_info.branch }}_${{env.tag}}
        files: ${{ env.FIRMWARE }}/*
        body: |
          ====================固件信息=======================
           源码：${{ matrix.repo_info.repo_url }}
           静态IP：${{ github.event.inputs.OP_IP }}
           插件：${{ github.event.inputs.CUSTOM_PLUGINS }}
           定制作者：${{ github.event.inputs.OP_author }}
           默认密码：无

    - name: 清理Releases
      uses: dev-drprasad/delete-older-releases@v0.3.4
      with:
        keep_latest: 2
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}